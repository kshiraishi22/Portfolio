{"version":3,"sources":["components/Header.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","rel","Component","Porfolio","portfolio","concat","src","imgurl","alt","description","Footer","imagebaseurl","App","Header_Header","Portfolio_Porfolio","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3baffdd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               {/* <li><a className=\"smoothscroll\" href=\"#about\">About</a></li> */}\n             {/* <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li> */}\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\n               {/* <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li> */}\n               {/* <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li> */}\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">Hi! I'm {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I'm a {resumeData.role}{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#portfolio\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href={`${item.href}`}>\n                      <img src={`${item.imgurl}`} alt=\"portfolio-images\" className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                  <a href={`${item.href}`}>Learn More</a>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li key={item.name}>\n                    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: \"https://ken-shiraishi.dev\",\n  name: \"Ken Shiraishi\",\n  role: \"Full-Stack web developer\",\n  // linkedinId: \"kshiraishi22\",\n  roleDescription:\n    \" that recently completed George Washington's Full-Stack boot camp program. I'm an experienced biotech professional turned web developer.\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/ken-shiraishi/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/kshiraishi22\",\n      className: \"fa fa-github\"\n    }\n    // {\n    //   \"name\":\"email\",\n    //   \"url\":\"http://twitter.com/rbhatia46\",\n    //   \"className\":\"fa fa-twitter\"\n    // }\n  ],\n  // \"aboutme\":\"I recently completed the George Washington University's Full-Stack boot camp program. \",\n\n  // \"work\":[\n  //   {\n  //     \"CompanyName\":\"Some Company\",\n  //     \"specialization\":\"Some specialization\",\n  //     \"MonthOfLeaving\":\"Jan\",\n  //     \"YearOfLeaving\":\"2018\",\n  //     \"Achievements\":\"Some Achievements\"\n  //   },\n  //   {\n  //     \"CompanyName\":\"Some Company\",\n  //     \"specialization\":\"Some specialization\",\n  //     \"MonthOfLeaving\":\"Jan\",\n  //     \"YearOfLeaving\":\"2018\",\n  //     \"Achievements\":\"Some Achievements\"\n  //   }\n  // ],\n  // \"skillsDescription\":\"Your skills here\",\n  // \"skills\":[\n  //   {\n  //     \"skillname\":\"HTML5\"\n  //   },\n  //   {\n  //     \"skillname\":\"CSS\"\n  //   },\n  //   {\n  //     \"skillname\":\"Reactjs\"\n  //   }\n  // ],\n  portfolio: [\n    {\n      name: \"Commute-Buddy\",\n      description:\n        \"A navigation app that allows users to have turn-by-turn directions as well as an interactive map. Features include the option to view multiple routes based on mode of travel or traffic, fuel usage and fuel cost for a given trip as well as health benefits for biking or walking.\",\n      imgurl: \"images/commute-buddy.png\",\n      href: \"https://magiama9.github.io/commute-buddy/\"\n\n    },\n    // {\n    //   name: \"Git Connected\",\n    //   description:\n    //     \"A job listing app that focuses primarily on employment seeking web developers to connect with employers looking to hire them. The app includes a secure login, ability to view/edit profiles, apply to jobs (developers) and post jobs (employers).\",\n    //   imgurl: \"images/git_connected.png\"\n    // },\n    {\n      name: \"Open Sesame\",\n      description:\n        \"A password generator that allows for users to attain a secure password simply by choosing the type of characters they desire and how long they want the password to be.\",\n      imgurl: \"images/password_generator.png\",\n      href: \"https://github.com/kshiraishi22/open_sesame\"\n    },\n    {\n      name: \"Employee Directory\",\n      description: \"A sample employee directory using React that allows users to search for employees based on name, phone #, email, or DOB.\",\n      imgurl: \"images/employee_directory.png\",\n      href: \"https://arcane-tundra-09488.herokuapp.com/\"\n    },\n    {\n      name: \"Burger Me Up\",\n      description: \"A simple burger app that allows users to list out any type of burger they want and once they click on the corresponding button, the burger will move over to the devoured list. Data is saved through MySQL.\",\n      imgurl: \"images/burger_app.png\",\n      href: \"https://peaceful-crag-51873.herokuapp.com/home\"\n    }\n  ]\n  // \"testimonials\":[\n  //   {\n  //     \"description\":\"This is a sample testimonial\",\n  //     \"name\":\"Some technical guy\"\n  //   },\n  //   {\n  //     \"description\":\"This is a sample testimonial\",\n  //     \"name\":\"Some technical guy\"\n  //   }\n  // ]\n};\n\nexport default resumeData;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\n// import About from './components/About';\n// import Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\n// import Testimonials from  './components/Testimonials';\n// import ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        {/* <About resumeData={resumeData}/> */}\n        {/* <Resume resumeData={resumeData}/> */}\n        <Portfolio resumeData={resumeData}/>\n        {/* <Testimonials resumeData={resumeData}/> */}\n        {/* <ContactUs resumeData={resumeData}/> */}\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}